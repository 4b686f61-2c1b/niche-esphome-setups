esp32:
  board: esp32dev
  
substitutions:
  name: esphome-web-abcdef
  friendly_name: High Power Disconnect RND TEST
esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  min_version: 2025.5.0
  name_add_mac_suffix: false
  project:
    name: esphome.web
    version: dev
  on_boot:
    then:
      - ds1307.read_time
      # read the RTC time once when the system boots

# Enable logging
logger:

# Enable Home Assistant API
# configure encryption
api:
  encryption: 
    key: "never gonna give you up" # Go to this URL to get a new API key. https://esphome.io/components/api.html#api-key
  id: api_id
  reboot_timeout: 0s

# OTA updates with password
ota:
  - platform: esphome
    password: very_secure_ota_password_69 # !secret ota_password

# Allow provisioning Wi-Fi via serial
improv_serial:

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device via WiFi AP.
captive_portal:
  id: captive_portal_flags

# To have a "next url" for improv serial
web_server:
  version: 3
  port: 80
  auth:
    username: Astolfo # !secret web_server_username
    password: https://www.youtube.com/watch?v=YiZsTqLfCVM # !secret web_server_password
  sorting_grou# ps:
    - id: zsdryzdhrhzydrreudjr
      name: "grzrghdxfjutrjstrdjrds"

wifi:
  # Set up a wifi access point
  ap: 
    ssid: "Femboy Hooters" # !secret ap_ssid
    password: "KeyboardSmasher_187*(&%2dlk" # !secret ap_password

  on_connect: 
    then:
    - globals.set:
        id: wifi_status
        value: 'true'
  on_disconnect: 
    then:
    - globals.set:
        id: wifi_status
        value: 'false'

  reboot_timeout: 0s

 # Example configuration entry
globals:
  # General Stuff
  - id: wifi_status
    type: bool
    restore_value: no
    initial_value: 'false'
  - id: splash_logo
    type: bool
    restore_value: no
    initial_value: 'true'
  - id: api_connectivity
    type: bool
    restore_value: no
    initial_value: 'false'
  # Switch States
  - id: relay_1_status
    type: bool
    restore_value: 'true'
  - id: relay_2_status
    type: bool
    restore_value: 'true'
  - id: relay_3_status
    type: bool
    restore_value: 'true'
  - id: relay_4_status
    type: bool
    restore_value: 'true'
  
# Example configuration entry
sn74hc595:
  - id: 'sn74hc595_hub'
    data_pin: 18
    clock_pin: 19
    latch_pin: 4
    sr_count: 1

# Individual outputs
switch:
  - platform: hbridge
    id: relay_1
    restore_mode: RESTORE_DEFAULT_OFF 
    name: "Relay 1"
    on_pin:
      sn74hc595: sn74hc595_hub
      number: 0
      inverted: false
    off_pin:
      sn74hc595: sn74hc595_hub
      number: 1
      inverted: false
    pulse_length: 30ms
    wait_time: 40ms
  - platform: hbridge
    id: relay_2
    restore_mode: RESTORE_DEFAULT_OFF
    name: "Relay 2"
    on_pin:
      sn74hc595: sn74hc595_hub
      number: 2
      inverted: false
    off_pin:
      sn74hc595: sn74hc595_hub
      number: 3
      inverted: false
    pulse_length: 30ms
    wait_time: 40ms
  - platform: hbridge
    id: relay_3
    restore_mode: RESTORE_DEFAULT_OFF
    name: "Relay 3"
    on_pin:
      sn74hc595: sn74hc595_hub
      number: 4
      inverted: false
    off_pin:
      sn74hc595: sn74hc595_hub
      number: 5
      inverted: false
    pulse_length: 30ms
    wait_time: 40ms
  - platform: hbridge
    id: relay_4
    restore_mode: RESTORE_DEFAULT_OFF
    name: "Relay 4"
    on_pin:
      sn74hc595: sn74hc595_hub
      number: 6
      inverted: false
    off_pin:
      sn74hc595: sn74hc595_hub
      number: 7
      inverted: false
    pulse_length: 30ms
    wait_time: 40ms

  - platform: gpio
    id: relay_5
    pin: 27
    name: "fixed state output"
    inverted: false
    

# Button to trigger pulse
button:
  - platform: template
    id: all_relays_on
    name: "Turn all relays on"
    on_press:
      - switch.turn_on: relay_1
      - switch.turn_on: relay_2
      - switch.turn_on: relay_3
      - switch.turn_on: relay_4
      - switch.turn_on: relay_5
  - platform: template
    id: all_relays_off
    name: "Turn all relays off"
    on_press:
      - switch.turn_off: relay_1
      - switch.turn_off: relay_2
      - switch.turn_off: relay_3
      - switch.turn_off: relay_4
      - switch.turn_off: relay_5

# Example configuration entry
sensor:
  - platform: wifi_signal
    name: "Node Reception"
    update_interval: 1s
    id: wifi_reception
    entity_category: "diagnostic"
  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_reception
    id: wifi_signal_per
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 99.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"
  - platform: uptime
    type: seconds
    name: Uptime Sensor
    id: boot_active
    update_interval: 1s

binary_sensor:
  - platform: gpio
    name: "turn on all relays"
    id: btn_all_relays_on
    pin:
      number: 13
      mode: INPUT_PULLUP
      inverted: true
    on_press: 
      then: 
        - button.press: all_relays_on
  - platform: gpio
    name: "turn off all relays"
    id: btn_all_relays_off
    pin:
      number: 12
      mode: INPUT_PULLUP
      inverted: true
    on_press: 
      then: 
        - button.press: all_relays_off

font:
  - file: "Jua-Regular.ttf"
    id: font_1
    size: 15
  - file: "PressStart2P-Regular.ttf"
    id: font_2
    size: 8
  - file: "BitcountPropSingle-VariableFont_CRSV,ELSH,ELXP,slnt,wght.ttf"
    id: font_3
    size: 15
  - file: "huashfdjsdj_glamper.woff"
    id: font_4
    size: 26

image:
  - file: mdi:heart
    id: alert
    type: binary
    transparency: chroma_key
    resize: 25x25
  # Symbols for WIFI stuffs
  - file: mdi:wifi-check
    id: is_wifi
    type: binary
    transparency: chroma_key
    resize: 25x25
  - file: mdi:wifi-strength-off-outline
    id: no_wifi
    type: binary
    transparency: chroma_key
    resize: 25x25
  - file: mdi:access-point
    id: symbol_access_point
    type: binary
    transparency: chroma_key
    resize: 25x25
  # RTC Sync dummy
  - file: mdi:clock-check-outline
    id: time_sync_ok
    type: binary
    transparency: chroma_key
    resize: 25x25
  # Images for switches
  - file: mdi:circle-slice-8
    id: switch_state_on
    type: binary
    transparency: chroma_key
    resize: 16x16
  - file: mdi:circle-outline
    id: switch_state_off
    type: binary
    transparency: chroma_key
    resize: 16x16
  # Femboy Engineering Group Logo
  #- file: "femboy_engineering_logo_v1_256w.png"
  #  id: boot_splash_logo
  #  type: binary
  #  transparency: chroma_key
  #  resize: 100x40 # Scaled from 1500x600 / 12
  # Logos for API HASS
  - file: mdi:home-assistant
    id: api_connected
    type: binary
    transparency: chroma_key
    resize: 25x25
  - file: mdi:home-off
    id: api_disconnected
    type: binary
    transparency: chroma_key
    resize: 25x25
  # Logos for current drawings
  - file: mdi:sine-wave
    id: load_is_active
    type: binary
    transparency: chroma_key
    resize: 16x16
  - file: mdi:power-sleep
    id: load_is_inactive
    type: binary
    transparency: chroma_key
    resize: 16x16
  # WIFI indicator status
  - file: mdi:wifi-strength-outline
    id: wifi_strength_0
    type: binary
    transparency: chroma_key
    resize: 25x25
  - file: mdi:wifi-strength-1
    id: wifi_strength_1
    type: binary
    transparency: chroma_key
    resize: 25x25
  - file: mdi:wifi-strength-2
    id: wifi_strength_2
    type: binary
    transparency: chroma_key
    resize: 25x25
  - file: mdi:wifi-strength-3
    id: wifi_strength_3
    type: binary
    transparency: chroma_key
    resize: 25x25
  - file: mdi:wifi-strength-4
    id: wifi_strength_4
    type: binary
    transparency: chroma_key
    resize: 25x25

i2c:
  - id: bus_a
    sda: 21
    scl: 22

# Example configuration entry
time:
  - platform: ds1307
    id: ds1307_time
    i2c_id: bus_a
    address: 0x68
  - platform: homeassistant
    # instead try to synchronize via network repeatedly ...
    on_time_sync:
      then:
        # ... and update the RTC when the synchronization was successful
        - ds1307.write_time
        #- switch.turn_on: relay_5
        #- delay: 500ms
        #- switch.turn_off: relay_5
    # ...
    on_time:

      - hours: 19
        minutes: 0
        then:
          - button.press: all_relays_on

      - hours: 19
        minutes: 30
        then:
          - button.press: all_relays_on

      - hours: 20
        minutes: 0
        then:
          - button.press: all_relays_on

      - hours: 7
        minutes: 0
        days_of_week: MON-FRI
        then:
          - button.press: all_relays_off

      - hours: 7
        minutes: 30
        days_of_week: MON-FRI
        then:
          - button.press: all_relays_off

      - hours: 8
        minutes: 30
        days_of_week: MON-FRI
        then:
          - button.press: all_relays_off


display:
  - platform: ssd1306_i2c
    i2c_id: bus_a
    model: "SSD1306 128x64"
    contrast: 50%
    address: 0x3C
    update_interval: 1s
    lambda: |-
      if (id(boot_active).state <= 3) {
        it.print(5, 0, id(font_4), "Femboy");
        it.print(5, 22, id(font_4), "Engineering");
        it.print(5, 56, id(font_2), "By 4b686f61");
        id(splash_logo) = false;
      } else {
        it.clear();
        it.strftime(0, 0, id(font_1), "%A", id(ds1307_time).now());
        it.strftime(0, 15, id(font_1), "%Y-%m-%d", id(ds1307_time).now());
        it.strftime(0, 30, id(font_1), "%I:%M:%S %p", id(ds1307_time).now());

        if (id(captive_portal_flags).is_active()) {
          // AP symbols
          it.image(100, 32, id(symbol_access_point));
          it.print(105, 55, id(font_2), "AP");
        } else if (id(wifi_status) == true) {
          // WIFI indicators
          // it.image(100, 28, id(is_wifi));

          int wir = id(wifi_signal_per).state;

          if (wir >= 90) {
            it.image(100, 28, id(wifi_strength_4));
          } else if (wir >= 80) {
            it.image(100, 28, id(wifi_strength_3));
          } else if (wir >= 60) {
            it.image(100, 28, id(wifi_strength_2));
          } else if (wir >= 40) {
            it.image(100, 28, id(wifi_strength_1));
          } else if (wir >= 20) {
            it.image(100, 28, id(wifi_strength_0));
          } 

          // Retrieve the Wi-Fi reception value as a float
          float wifi_reception_value = id(wifi_signal_per).state;
          // Convert Wi-Fi reception to string without decimals
          char val_832322[10]; // Buffer to hold the string
          sprintf(val_832322, "%.0f%%", wifi_reception_value);
          // Display the Wi-Fi reception value
          it.print(101, 55, id(font_2), val_832322);
        } else {
          it.image(100, 28, id(no_wifi));
          it.print(101, 55, id(font_2), "N/A");
        }

        // API connectivity aesthetics
        if (id(api_id).is_connected()) {
          it.image(100, 1, id(api_connected));
        } else {
          it.image(100, 1, id(api_disconnected));
        }

        int ind1pos_y = 48;

        // Relay 1 LCD indc
        if (id(relay_1).state) {
          it.image(1, ind1pos_y, id(switch_state_on));
        } else {
          it.image(1, ind1pos_y, id(switch_state_off));
        }

        // Relay 2 LCD indc
        if (id(relay_2).state) {
          it.image(19, ind1pos_y, id(switch_state_on));
        } else {
          it.image(19, ind1pos_y, id(switch_state_off));
        }

        // Relay 3 LCD indc
        if (id(relay_3).state) {
          it.image(38, ind1pos_y, id(switch_state_on));
        } else {
          it.image(38, ind1pos_y, id(switch_state_off));
        }

        // Relay 4 LCD indc
        if (id(relay_4).state) {
          it.image(57, ind1pos_y, id(switch_state_on));
        } else {
          it.image(57, ind1pos_y, id(switch_state_off));
        }

        auto current_time = id(ds1307_time).now(); // Get the current time
        if ((current_time.second % 2) == 0) {
          // Current Sensor
          it.image(76, ind1pos_y, id(load_is_active));
        } else {
          it.image(76, ind1pos_y, id(load_is_inactive));
        }
      }

# Example configuration entry
number:
  - platform: template
    name: "Template number"
    optimistic: True
    min_value: 0
    max_value: 255
    step: 1
    restore_value: True
      